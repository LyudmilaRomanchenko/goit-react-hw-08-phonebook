{"version":3,"sources":["redux/auth/auth-operations.js","redux/auth/auth-selector.js","redux/auth/auth-slice.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/UserMemu/UserMemu.js","components/AppBar/AppBar.js","components/Spinner/Spinner.js","components/PrivateRoute.js","components/PublicRoute.js","components/App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","redux/contacts/contacts-actions.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","components/UserMemu/UserMemu.module.css","styles/styles.js","components/Spinner/Spinner.module.css","images/home-img-1.jpg"],"names":["notify","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","console","log","Promise","reject","Error","logIn","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","rejectWithValue","get","operations","authSelectors","getIsLoggedIn","isLoggedIn","getUserEmail","user","email","getIsFetchingCurrent","isFetchingCurrentUser","authSlice","createSlice","name","initialState","extraReducers","authOperations","fulfilled","payload","pending","action","rejected","Navigation","useSelector","to","className","isActive","s","activeLink","link","AuthNav","UserMemu","dispatch","useDispatch","Button","type","variant","size","sx","styles","buttonLogOut","onClick","Appbar","AppBar","bgcolor","paddingLeft","Toolbar","Typography","component","display","Spinner","Loader","color","height","width","timeout","PrivateRoute","PublicRoute","restricted","redirectTo","shouldRedirect","HomePage","lazy","RegisterForm","LoginForm","Contacts","App","useEffect","fallback","path","element","newestOnTop","rtl","pauseOnFocusLoss","items","createReducer","fetchContactsSuccsess","addContactsSuccsess","deleteContactsSuccsess","filter","contact","id","changeFilter","combineReducers","authReducer","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","next","logger","authPersistConfig","key","storage","whitelist","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","loading","StrictMode","document","getElementById","addContactsRequest","createAction","addContactsError","deleteContactsRequest","deleteContactsError","fetchContactsRequest","fetchContactsError","module","exports","input","margin","buttonStyles","fontSize","buttonDelete"],"mappings":"wUAIMA,EAAS,SAACC,GAAD,OACbC,YAAMD,EAAS,CACbE,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,KAMdC,IAAMC,SAASC,QAAU,wCAEzB,I,EAAMC,EAAQ,SACRA,GACFH,IAAMC,SAASG,QAAQC,OAAOC,cAA9B,iBAAwDH,IAFtDA,EAAQ,WAKVH,IAAMC,SAASG,QAAQC,OAAOC,cAAgB,IAI5CC,EAAWC,YAAiB,gBAAD,uCAAkB,WAAOC,GAAP,iBAAAC,EAAA,+EAExBV,IAAMW,KAE3B,gBAEAF,GAN6C,uBAEvCG,EAFuC,EAEvCA,KAORT,EAAUS,EAAKT,OATgC,kBAUxCS,GAVwC,uCAY/CC,QAAQC,IAAR,MACAzB,EAAO,8BAbwC,kBAcxC0B,QAAQC,OAAO,IAAIC,QAdqB,yDAAlB,uDA0B3BC,EAAQV,YAAiB,aAAD,uCAAe,WAAOC,GAAP,iBAAAC,EAAA,+EAElBV,IAAMW,KAE3B,eAEAF,GANuC,uBAEjCG,EAFiC,EAEjCA,KAMRT,EAAUS,EAAKT,OAR0B,kBASlCS,GATkC,uCAWzCC,QAAQC,IAAR,MACAzB,EAAO,qCAZkC,kBAalC0B,QAAQC,OAAO,IAAIC,QAbe,yDAAf,uDAiBxBE,EAASX,YAAiB,cAAD,sBAAgB,sBAAAE,EAAA,+EAGrCV,IAAMW,KAAK,iBAH0B,OAK3CR,IAL2C,uDAO3CU,QAAQC,IAAR,MAP2C,kBAQpCC,QAAQC,OAAO,IAAIC,QARiB,0DAYzCG,EAAmBZ,YACvB,eADuC,uCAEvC,WAAOa,EAAGC,GAAV,qBAAAZ,EAAA,yDACQa,EAAQD,EAASE,WACjBC,EAAiBF,EAAMG,KAAKvB,MAClCU,QAAQC,IAAIW,GACW,OAAnBA,EAJN,yCAKWH,EAASK,mBALpB,cAQExB,EAAUsB,GARZ,kBAW2BzB,IAAM4B,IAE3B,kBAbN,uBAWYhB,EAXZ,EAWYA,KAXZ,kBAeWA,GAfX,yCAiBIC,QAAQC,IAAR,MAjBJ,kBAkBWC,QAAQC,OAAO,IAAIC,QAlB9B,0DAFuC,yDAoD1BY,EANI,CACjBtB,WACAY,SACAD,QACAE,oBCzHaU,EAPO,CACpBC,cAPoB,SAACR,GAAD,OAAWA,EAAMG,KAAKM,YAQ1CC,aAPmB,SAACV,GAAD,OAAWA,EAAMG,KAAKQ,KAAKC,OAQ9CC,qBAP2B,SAACb,GAAD,OAAWA,EAAMG,KAAKW,wB,OC+CpCC,EAvCGC,YAAY,CAC5BC,KAAM,OACNC,aATmB,CACnBP,KAAM,CAAEM,KAAM,KAAML,MAAO,MAC3BhC,MAAO,KACP6B,YAAY,EACZK,uBAAuB,GAMvBK,eAAa,mBACVC,EAAepC,SAASqC,WADd,SACyBrB,EADzB,GAC8C,IAAZsB,EAAW,EAAXA,QAC3CtB,EAAMW,KAAOW,EAAQX,KACrBX,EAAMpB,MAAQ0C,EAAQ1C,MACtBoB,EAAMS,YAAa,KAJV,cASVW,EAAezB,MAAM0B,WATX,SASsBrB,EATtB,GAS2C,IAAZsB,EAAW,EAAXA,QACxCtB,EAAMW,KAAOW,EAAQX,KACrBX,EAAMpB,MAAQ0C,EAAQ1C,MACtBoB,EAAMS,YAAa,KAZV,cAiBVW,EAAexB,OAAOyB,WAjBZ,SAiBuBrB,EAjBvB,GAiB2C,EAAXsB,QACzCtB,EAAMW,KAAO,CAAEM,KAAM,KAAML,MAAO,MAClCZ,EAAMpB,MAAQ,KACdoB,EAAMS,YAAa,KApBV,cAsBVW,EAAevB,iBAAiB0B,SAtBtB,SAsB+BvB,GACxCA,EAAMc,uBAAwB,KAvBrB,cAyBVM,EAAevB,iBAAiBwB,WAzBtB,SAyBiCrB,EAAOwB,GACjDxB,EAAMW,KAAOa,EAAOF,QACpBtB,EAAMS,YAAa,EACnBT,EAAMc,uBAAwB,KA5BrB,cA8BVM,EAAevB,iBAAiB4B,UA9BtB,SA8BgCzB,GACzCA,EAAMc,uBAAwB,KA/BrB,KAoCf,S,2KCfeY,MA5Bf,WACE,IAAMjB,EAAakB,YAAYpB,IAAcC,eAI7C,OAHAlB,QAAQC,IAAIkB,GAKV,cADA,CACA,iBACE,cAAC,IAAD,CACEmB,GAAG,IACHC,UAAW,qBAAGC,SAA2BC,IAAEC,WAAaD,IAAEE,MAF5D,kBAOCxB,GACC,cAAC,IAAD,CACEmB,GAAG,YACHC,UAAW,qBAAGC,SAA2BC,IAAEC,WAAaD,IAAEE,MAF5D,0B,0BCOOC,MAxBf,WAEE,OAEE,cADA,CACA,iBACE,cAAC,IAAD,CAEEN,GAAG,YACHC,UAAW,qBAAGC,SAA2BC,IAAEC,WAAaD,IAAEE,MAH5D,sBAQA,cAAC,IAAD,CACEL,GAAG,SACHC,UAAW,qBAAGC,SAA2BC,IAAEC,WAAaD,IAAEE,MAF5D,uB,0CCgBSE,MAzBf,WACE,IAAMvB,EAAQe,YAAYpB,IAAcG,cACxCpB,QAAQC,IAAIqB,GACZ,IAAMwB,EAAWC,cAEjB,OACE,sBAAKR,UAAWE,IAAEpB,KAAlB,UACE,4CACU,sBAAMkB,UAAWE,IAAEnB,MAAnB,SAA2BA,OAGrC,cAAC0B,EAAA,EAAD,CAEEC,KAAK,SACLC,QAAQ,YACRC,KAAK,QACLC,GAAIC,IAAOC,aACXC,QAAS,kBAAMT,EAAShB,IAAexB,WANzC,yB,2BCVS,SAASkD,IACtB,IAAMrC,EAAakB,YAAYpB,IAAcC,eACvCM,EAAwBa,YAAYpB,IAAcM,sBAIxD,OAFAvB,QAAQC,IAAIkB,GACZnB,QAAQC,KAAKuB,GAEX,cAACiC,EAAA,EAAD,CAAQ9E,SAAS,SAASyE,GAAI,CAAEM,QAAS,UAAWC,YAAa,SAAjE,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAYX,QAAQ,KAAKY,UAAU,MAAMV,GAAI,CAAEW,QAAS,QAAxD,UACE,cAAC,EAAD,IAIC5C,GAAcK,EAAwB,cAAC,EAAD,IAAe,cAAC,EAAD,W,+CCNjDwC,MAbf,WACE,OACE,cAAC,IAAD,CACEzB,UAAWE,IAAEwB,OACbhB,KAAK,YACLiB,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,OCGAC,MAVf,WAEE,IAAMnD,EAAakB,YAAYpB,IAAcC,eAK7C,OAHAlB,QAAQC,IAAIkB,GAGLA,EAAa,cAAC,IAAD,IAAa,cAAC,IAAD,CAAUmB,GAAG,YCKjCiC,MAbf,YAAgE,IAAD,IAAxCC,kBAAwC,aAApBC,kBAAoB,MAAP,IAAO,EAC7DzE,QAAQC,IAAIwE,GACZ,IAGMC,EAHarC,YAAYpB,IAAcC,gBAGRsD,EAKrC,OAFAxE,QAAQC,IAAIyE,GAEJA,EAA8B,cAAC,IAAD,CAAUpC,GAAImC,IAA3B,cAAC,IAAD,K,QCMrBE,EAAWC,gBAAK,kBAAM,iCACtBC,EAAeD,gBAAK,kBAAM,uDAC1BE,EAAYF,gBAAK,kBAAM,uDACvBG,EAAWH,gBAAK,kBAAM,iCAE5B5E,QAAQC,IAAIqE,GA4DGU,I,EAAAA,EA1Df,WACE,IAAMxD,EAAwBa,YAAYpB,IAAcM,sBACxDvB,QAAQC,IAAIuB,GAEZ,IAAMsB,EAAWC,cAIjB,OAHAkC,qBAAU,WACRnC,EAAShB,IAAevB,sBACvB,CAACuC,IAGF,aADA,CACA,gBACGtB,EACC,cAAC,EAAD,IAEA,qCACE,cAAC,EAAD,IACA,cAAC,WAAD,CAAU0D,SAAU,cAAC,EAAD,IAApB,SAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,SACE,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAACT,EAAD,QAE3B,cAAC,IAAD,CACEQ,KAAK,YACLC,QAAS,cAAC,EAAD,CAAaX,WAAW,YAAYD,YAAU,IAFzD,SAIE,cAAC,IAAD,CAAOW,KAAK,YAAYC,QAAS,cAACP,EAAD,QAEnC,cAAC,IAAD,CACEM,KAAK,SACLC,QAAS,cAAC,EAAD,CAAaX,WAAW,YAAYD,YAAU,IAFzD,SAIE,cAAC,IAAD,CAAOW,KAAK,SAASC,QAAS,cAACN,EAAD,QAGhC,cAAC,IAAD,CAAOK,KAAK,YAAYC,QAAS,cAAC,EAAD,IAAjC,SACE,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAACL,EAAD,aAIvC,cAAC,IAAD,CACEpG,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBwG,aAAa,EACbvG,cAAY,EACZwG,KAAK,EACLC,kBAAgB,EAChBvG,WAAS,EACTD,cAAY,U,gFCpElByG,EAAQC,YAAc,IAAD,mBACxBC,KAAwB,SAAChF,EAAD,YAAUsB,WADV,cAExB2D,KAAsB,SAACjF,EAAD,OAAUsB,EAAV,EAAUA,QAAV,4BAA4BtB,GAA5B,CAAmCsB,OAFjC,cAGxB4D,KAAyB,SAAClF,EAAD,OAAUsB,EAAV,EAAUA,QAAV,OACxBtB,EAAMmF,QAAO,SAACC,GAAD,OAAaA,EAAQC,KAAO/D,QAJlB,IAOrB6D,EAASJ,YAAc,GAAD,eACzBO,KAAe,SAACtF,EAAD,YAAUsB,YAQbJ,GALMqE,YAAgB,CACnCT,QACAK,WCJF7F,QAAQC,IAAIiG,KACZlG,QAAQC,IAAIkG,IAEZ,IAMMC,GAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CANK,SAACC,GAAD,OAAW,SAACC,GAAD,OAAU,SAAC7E,GACzClC,QAAQC,IAAI,4EAAiBiC,GAE7B6E,EAAK7E,MAUL8E,MAGIC,GAAoB,CACxBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGDN,GAAQO,YAAe,CAClCC,QAAS,CACPzG,KAAM0G,YAAeN,GAAmBf,KACxCC,SAAUA,IAEZC,cAEAoB,UAAUC,IAGZzH,QAAQC,IAAI6G,GAAMnG,YAEX,IAAM+G,GAAYC,YAAab,IC9CtCc,IAASC,OACP,cAAC,IAAD,CAAUf,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAagB,QAAS,KAAMJ,UAAWA,GAAvC,SACE,cAAC,IAAD,UACE,cAAC,IAAMK,WAAP,UACE,cAAC,EAAD,YAKRC,SAASC,eAAe,U,gCCnB1B,+VAIaC,EAAqBC,YAAa,+BAClCxC,EAAsBwC,YAAa,gCACnCC,EAAmBD,YAAa,6BAEhCE,EAAwBF,YACnC,kCAEWvC,EAAyBuC,YACpC,mCAEWG,EAAsBH,YAAa,gCAEnCI,EAAuBJ,YAClC,iCAEWzC,EAAwByC,YACnC,kCAEWK,EAAqBL,YAAa,+BAElCnC,EAAemC,YAAa,0B,mBCvBzCM,EAAOC,QAAU,CAAC,KAAO,yBAAyB,WAAa,+BAA+B,IAAM,0B,mBCApGD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,WAAa,4BAA4B,IAAM,uB,mBCA9FD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,MAAQ,wBAAwB,OAAS,2B,gCCDzF,IAwCMrF,EAAS,CACbsF,MAzCY,CACZC,OAAQ,SACR7E,QAAS,SAwCT8E,aArCmB,CACnBD,OAAQ,SACR7E,QAAS,QACTL,QAAS,UACT,SAAU,CACRA,QAAS,WAEX,SAAU,CACRA,QAAS,YA8BXJ,aA1BmB,CACnBa,OAAQ,OACR2E,SAAU,GACVF,OAAQ,SACRlF,QAAS,UACT,SAAU,CACRA,QAAS,WAEX,SAAU,CACRA,QAAS,YAkBXqF,aAdmB,CACnBrF,QAAS,UACT,SAAU,CACRA,QAAS,WAEX,SAAU,CACRA,QAAS,aAWEL,O,mBC9CfoF,EAAOC,QAAU,CAAC,OAAS,0B,gCCDZ,QAA0B,yC","file":"static/js/main.bbe39c72.chunk.js","sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nconst notify = (message) =>\n  toast(message, {\n    position: \"top-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n\n// import { useSelector, useDispatch } from \"react-redux\";\n// import authSelectors from \"./auth-selector\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = createAsyncThunk(\"auth/register\", async (credentials) => {\n  try {\n    const { data } = await axios.post(\n      // \"https://connections-api.herokuapp.com/users/signup\",\n      \"/users/signup\",\n\n      credentials\n    );\n    // console.log(\"hhhh\", data);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    console.log(error);\n    notify(\"Maybe this email is taken!\");\n    return Promise.reject(new Error());\n    // toast.error(error.message);\n  }\n});\n// async function fetchTrending() {\n//   const response = await fetch(urlTrending);\n//   if (response.ok) {\n//     return await response.json();\n//   }\n//   return Promise.reject(new Error(\"No selection of trending films!\"));\n// }\n\nconst logIn = createAsyncThunk(\"auth/login\", async (credentials) => {\n  try {\n    const { data } = await axios.post(\n      // \"https://connections-api.herokuapp.com/users/login\",\n      \"/users/login\",\n\n      credentials\n    );\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    console.log(error);\n    notify(\"Email or password is not correct!\");\n    return Promise.reject(new Error());\n  }\n});\n\nconst logOut = createAsyncThunk(\"auth/logout\", async () => {\n  try {\n    // await axios.post(\"https://connections-api.herokuapp.com/users/logout\");\n    await axios.post(\"/users/logout\");\n\n    token.unset();\n  } catch (error) {\n    console.log(error);\n    return Promise.reject(new Error());\n  }\n});\n\nconst fetchCurrentUser = createAsyncThunk(\n  \"auth/refresh\",\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n    console.log(persistedToken);\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n\n    try {\n      const { data } = await axios.get(\n        // \"https://connections-api.herokuapp.com/users/current\"\n        \"/users/current\"\n      );\n      return data;\n    } catch (error) {\n      console.log(error);\n      return Promise.reject(new Error());\n    }\n  }\n);\n\n// const fetchCurrentUser = createAsyncThunk(\n//   \"auth/refresh\",\n//   async (_, thunkAPI) => {\n//     const state = thunkAPI.getState();\n//     const persistedToken = state.auth.token;\n\n//     if (persistedToken === null) {\n//       console.log(\"Токена нет, уходим из fetchCurrentUser\");\n//       return thunkAPI.rejectWithValue();\n//     }\n\n//     token.set(persistedToken);\n//     try {\n//       const { data } = await axios.get(\"/users/current\");\n//       return data;\n//     } catch (error) {\n//       // TODO: Добавить обработку ошибки error.message\n//     }\n//   }\n// );\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n\n// export const addContact = (name, number) => async (dispatch) => {\n//   const contact = {\n//     name,\n//     number,\n//   };\n\n//   dispatch(addContactsRequest());\n\n//   try {\n//     const { data } = await axios.post(\"/contacts\", contact);\n//     dispatch(addContactsSuccsess(data));\n//   } catch (error) {\n//     dispatch(addContactsError(error));\n//   }\n\n//   //   axios\n//   //     .post(\"/contacts\", contact)\n//   //     .then(({ data }) => dispatch(addContactsSuccsess(data)))\n//   //     .catch((error) => dispatch(addContactsError(error)));\n// };\n\n// export const deleteContact = (contactId) => async (dispatch) => {\n//   dispatch(deleteContactsRequest());\n\n//   try {\n//     axios.delete(`/contacts/${contactId}`);\n//     dispatch(deleteContactsSuccsess(contactId));\n//   } catch (error) {\n//     dispatch(deleteContactsError(error));\n//   }\n// };\n\n// export default { addContact, fetchContacts, deleteContact };\n","const getIsLoggedIn = (state) => state.auth.isLoggedIn;\r\nconst getUserEmail = (state) => state.auth.user.email;\r\nconst getIsFetchingCurrent = (state) => state.auth.isFetchingCurrentUser;\r\n\r\n// const getError = (state) => state.auth.error;\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUserEmail,\r\n  getIsFetchingCurrent,\r\n  // getError,\r\n};\r\n\r\nexport default authSelectors;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport authOperations from \"./auth-operations\";\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    // [authOperations.register.rejected](state) {\n    //   state.error = true;\n    // },\n    [authOperations.logIn.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    // [authOperations.logIn.rejected](state) {\n    //   state.error = true;\n    // },\n    [authOperations.logOut.fulfilled](state, { payload }) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.pending](state) {\n      state.isFetchingCurrentUser = true;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false;\n    },\n    [authOperations.fetchCurrentUser.rejected](state) {\n      state.isFetchingCurrentUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n\n///////////////////////////////////////////////////////////////////////////////////////\n// import { createSlice } from \"@reduxjs/toolkit\";\n// // import { register, login } from \"./auth-operations\";\n// import authOperations from \"./auth-operations\";\n\n// const initialState = {\n//   user: { name: null, email: null },\n//   token: null,\n//   isLoggedIn: false,\n// };\n\n// // console.log(authOperations.register);\n\n// const authSlice = createSlice({\n//   name: \"auth\",\n//   initialState,\n//   reducers: {\n//     [authOperations.register.fulfilled](state, { payload }) {\n//       state.user = payload.user;\n//       state.token = payload.token;\n//       state.isLoggedIn = true;\n//     },\n//     [authOperations.logIn.fulfilled](state, { payload }) {\n//       state.user = payload.user;\n//       state.token = payload.token;\n//       state.isLoggedIn = true;\n//     },\n//   },\n// });\n\n// // const authSlice = createSlice({\n// //   name: \"auth\",\n// //   initialState,\n// //   extraReducers: {\n// //     [authOperations.register.fulfilled](state, action) {\n// //       state.user = action.payload.user;\n// //       state.token = action.payload.token;\n// //       state.isLoggedIn = true;\n// //     },\n// //     [authOperations.login.fulfilled](state, action) {\n// //       state.user = action.payload.user;\n// //       state.token = action.payload.token;\n// //       state.isLoggedIn = true;\n// //     },\n// //     // [authOperations.logOut.fulfilled](state, action) {\n// //     //   state.user = { name: null, email: null };\n// //     //   state.token = null;\n// //     //   state.isLoggedIn = false;\n// //     // },\n// //     // [authOperations.fetchCurrentUser.fulfilled](state, action) {\n// //     //   state.user = action.payload;\n// //     //   state.isLoggedIn = true;\n// //     // },\n// //   },\n// // });\n\n// console.log(authSlice);\n\n// export default authSlice.reducer;\n\n// /////////////////\n// //  [authOperations.register.fulfilled](\n// //       { user, token, isLoggedIn },\n// //       { payload }\n// //     ) {\n// //       user = payload.user;\n// //       token = payload.token;\n// //       isLoggedIn = true;\n// //     },\n","/* eslint-disable no-lone-blocks */\nimport { useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./Navigation.module.css\";\nimport { authSelectors } from \"../../redux/auth\";\n\nfunction Navigation() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  console.log(isLoggedIn);\n  // const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n\n  return (\n    // !isFetchingCurrentUser && (\n    <nav>\n      <NavLink\n        to=\"/\"\n        className={({ isActive }) => (isActive ? s.activeLink : s.link)}\n      >\n        Home\n      </NavLink>\n\n      {isLoggedIn && (\n        <NavLink\n          to=\"/contacts\"\n          className={({ isActive }) => (isActive ? s.activeLink : s.link)}\n        >\n          Contacts\n        </NavLink>\n      )}\n    </nav>\n    // )\n  );\n}\n\nexport default Navigation;\n\n// {\n//   !isFetchingCurrentUser && (\n//     <NavLink\n//       to=\"/\"\n//       className={({ isActive }) => (isActive ? s.activeLink : s.link)}\n//     >\n//       Home\n//     </NavLink>\n//   );\n// }\n\n// className={({ isActive }) => isActive ? \"red\" : \"blue\"}\n//////////////////\n{\n  /* \n    <NavLink\n      //   exact\n      to=\"/register\"\n      className={({ isActive }) => (isActive ? s.activeLink : s.link)}\n    >\n      Register\n    </NavLink>\n\n    <NavLink\n      to=\"/login\"\n      className={({ isActive }) => (isActive ? s.activeLink : s.link)}\n    >\n      Login\n    </NavLink> */\n}\n","import { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./AuthNav.module.css\";\r\nimport { authSelectors } from \"../../redux/auth\";\r\n\r\nfunction AuthNav() {\r\n  // const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\r\n  return (\r\n    // !isFetchingCurrentUser && (\r\n    <nav>\r\n      <NavLink\r\n        //   exact\r\n        to=\"/register\"\r\n        className={({ isActive }) => (isActive ? s.activeLink : s.link)}\r\n      >\r\n        Register\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        to=\"/login\"\r\n        className={({ isActive }) => (isActive ? s.activeLink : s.link)}\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </nav>\r\n    // )\r\n  );\r\n}\r\n\r\nexport default AuthNav;\r\n","/* eslint-disable jsx-a11y/alt-text */\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./UserMemu.module.css\";\r\nimport homeImg from \"../../images/home-img-1.jpg\";\r\nimport { authSelectors, authOperations } from \"../../redux/auth\";\r\nimport Button from \"@mui/material/Button\";\r\nimport styles from \"../../styles/styles\";\r\n\r\nfunction UserMemu() {\r\n  const email = useSelector(authSelectors.getUserEmail);\r\n  console.log(email);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <nav className={s.user}>\r\n      <span>\r\n        Welcom, <span className={s.email}>{email}</span>\r\n      </span>\r\n\r\n      <Button\r\n        // classes={classes}\r\n        type=\"button\"\r\n        variant=\"contained\"\r\n        size=\"small\"\r\n        sx={styles.buttonLogOut}\r\n        onClick={() => dispatch(authOperations.logOut())}\r\n      >\r\n        Log out\r\n      </Button>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default UserMemu;\r\n\r\n///////////////////////\r\n//  <button\r\n//    className={s.button}\r\n//    type=\"button\"\r\n//    onClick={() => dispatch(authOperations.logOut())}\r\n//  >\r\n//    Log out\r\n//  </button>;\r\n","import { useSelector } from \"react-redux\";\nimport Navigation from \"../Navigation\";\nimport styles from \"./AppBar.module.css\";\nimport AuthNav from \"../AuthNav\";\nimport UserMemu from \"../UserMemu\";\nimport { authSelectors } from \"../../redux/auth\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\n\nexport default function Appbar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n\n  console.log(isLoggedIn);\n  console.log(!isFetchingCurrentUser);\n  return (\n    <AppBar position=\"static\" sx={{ bgcolor: \"#ebeded\", paddingLeft: \"100px\" }}>\n      <Toolbar>\n        <Typography variant=\"h8\" component=\"div\" sx={{ display: \"flex\" }}>\n          <Navigation />\n          {/* {isLoggedIn && <UserMemu />}\n          {!isLoggedIn && isFetchingCurrentUser && <h3>ffffffffff</h3>}\n          {!isLoggedIn && !isFetchingCurrentUser && <AuthNav />} */}\n          {isLoggedIn || isFetchingCurrentUser ? <UserMemu /> : <AuthNav />}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\n/////////////////////////\n// <header className={styles.header}>\n//   <Navigation />\n\n//   {isLoggedIn || isFetchingCurrentUser ? <UserMemu /> : <AuthNav />}\n// </header>\n// {\n//   /* {!isLoggedIn && !isFetchingCurrentUser ? \"\" : <Navigation />}\n//       {!isLoggedIn && isFetchingCurrentUser ? <AuthNav /> : <UserMemu />} */\n// }\n// {\n//   /* {(isLoggedIn || isFetchingCurrentUser) && <UserMemu />} */\n// }\n","import React from \"react\";\r\nimport s from \"./Spinner.module.css\";\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nfunction Spinner() {\r\n  return (\r\n    <Loader\r\n      className={s.Loader}\r\n      type=\"ThreeDots\"\r\n      color=\"#009688\"\r\n      height={100}\r\n      width={100}\r\n      timeout={3000} //3 secs\r\n    />\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import { useSelector } from \"react-redux\";\r\nimport { Navigate, Outlet } from \"react-router-dom\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\n// console.log(Redirect);\r\n\r\nfunction PrivateRoute() {\r\n  // console.log(redirectTo);\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n  console.log(isLoggedIn);\r\n\r\n  // return isLoggedIn ? <Outlet /> : <Navigate to={redirectTo} />;\r\n  return isLoggedIn ? <Outlet /> : <Navigate to=\"/login\" />;\r\n}\r\n\r\nexport default PrivateRoute;\r\n","/* eslint-disable no-lone-blocks */\r\nimport { useSelector } from \"react-redux\";\r\nimport { Navigate, Outlet } from \"react-router-dom\";\r\nimport { authSelectors } from \"../redux/auth\";\r\n\r\nfunction PublicRoute({ restricted = false, redirectTo = \"/\" }) {\r\n  console.log(redirectTo);\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  // const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\r\n\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  // const shouldRedirect = isLoggedIn && restricted && !isFetchingCurrentUser;\r\n\r\n  console.log(shouldRedirect);\r\n\r\n  return !shouldRedirect ? <Outlet /> : <Navigate to={redirectTo} />;\r\n}\r\n\r\nexport default PublicRoute;\r\n\r\n///////////////// Props /////////////////////////////////////////\r\n{\r\n  /* <h3>jjjjjjjj</h3>; */\r\n}\r\n","// import \"./App.css\";\n// import contacts from \"./contacts.json\";\nimport { lazy, Suspense, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Routes, Route, Link } from \"react-router-dom\";\n// import { Redirect } from \"react-router-dom\";\n// import ContactList from \"./ContactList\";\n// import ContactForm from \"./ContactForm\";\n// import Filter from \"./Filter\";\n// import s from \"./Phonebook.module.css\";\nimport AppBar from \"./AppBar\";\nimport Spinner from \"./Spinner\";\n// import Contacts from \"../views/Сontacts\";\n// import RegisterForm from \"../views/RegisterForm\";\n// import LoginForm from \"../views/LoginForm\";\nimport { authOperations, authSelectors } from \"../redux/auth\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport PublicRoute from \"./PublicRoute\";\nimport { ToastContainer } from \"react-toastify\";\n\n// Добавляет ленивую загрузку\nconst HomePage = lazy(() => import(\"../views/HomePage\"));\nconst RegisterForm = lazy(() => import(\"../views/RegisterForm\"));\nconst LoginForm = lazy(() => import(\"../views/LoginForm\"));\nconst Contacts = lazy(() => import(\"../views/Сontacts\"));\n\nconsole.log(PrivateRoute);\n\nfunction App() {\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n  console.log(isFetchingCurrentUser);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n  return (\n    // !isFetchingCurrentUser && (\n    <div>\n      {isFetchingCurrentUser ? (\n        <Spinner />\n      ) : (\n        <>\n          <AppBar />\n          <Suspense fallback={<Spinner />}>\n            {/* <AppBar /> */}\n            <Routes>\n              <Route path=\"/\" element={<PublicRoute />}>\n                <Route path=\"/\" element={<HomePage />} />\n              </Route>\n              <Route\n                path=\"/register\"\n                element={<PublicRoute redirectTo=\"/contacts\" restricted />}\n              >\n                <Route path=\"/register\" element={<RegisterForm />} />\n              </Route>\n              <Route\n                path=\"/login\"\n                element={<PublicRoute redirectTo=\"/contacts\" restricted />}\n              >\n                <Route path=\"/login\" element={<LoginForm />} />\n              </Route>\n\n              <Route path=\"/contacts\" element={<PrivateRoute />}>\n                <Route path=\"/contacts\" element={<Contacts />} />\n              </Route>\n            </Routes>\n          </Suspense>\n          <ToastContainer\n            position=\"top-right\"\n            autoClose={3000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        </>\n      )}\n    </div>\n    // )\n  );\n}\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport {\n  addContactsSuccsess,\n  deleteContactsSuccsess,\n  fetchContactsSuccsess,\n  changeFilter,\n} from \"./contacts-actions\";\n\nconst items = createReducer([], {\n  [fetchContactsSuccsess]: (state, { payload }) => payload,\n  [addContactsSuccsess]: (state, { payload }) => [...state, payload],\n  [deleteContactsSuccsess]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (state, { payload }) => payload,\n});\n\nconst initialState = combineReducers({\n  items,\n  filter,\n});\n\nexport default initialState;\n\n// Без toolkit\n// import { combineReducers } from \"redux\";\n// import actions from \"./actions\";\n// import types from \"./types\";\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       return [...state, payload];\n//     case types.DELETE:\n//       return state.filter((contact) => contact.id !== payload);\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case types.CHANGE_FILTER:\n//       return payload;\n//     default:\n//       return state;\n//   }\n// };\n\n// const initialState = combineReducers({\n//   items,\n//   filter,\n// });\n\n// export default initialState;\n","/* eslint-disable import/no-anonymous-default-export */\n// import { createStore, combineReducers } from \"redux\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport contacts from \"./contacts/contacts-reducer\";\nimport { authReducer } from \"./auth\";\n\nconsole.log(authReducer);\nconsole.log(contacts);\n\nconst myMiddleWare = (store) => (next) => (action) => {\n  console.log(\"Моя прослойка\", action);\n\n  next(action);\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  myMiddleWare,\n  logger,\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contacts,\n  },\n  middleware,\n  // указываем, что devtools нужны только при разработке\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconsole.log(store.getState());\n\nexport const persistor = persistStore(store);\n\n// export default store;\n\n// Без toolkit\n// import { createStore, combineReducers } from \"redux\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n// import contacts from \"./reducer\";\n\n// const rootReducer = combineReducers({\n//   contacts: contacts,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\n// export default store;\n\n// console.log(rootReducer);\n// console.log(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <React.StrictMode>\n          <App />\n        </React.StrictMode>\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","/* eslint-disable import/no-anonymous-default-export */\nimport { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const addContactsRequest = createAction(\"contacts/addContactsRequest\");\nexport const addContactsSuccsess = createAction(\"contacts/addContactsSuccsess\");\nexport const addContactsError = createAction(\"contacts/addContactsError\");\n\nexport const deleteContactsRequest = createAction(\n  \"contacts/deleteContactsRequest\"\n);\nexport const deleteContactsSuccsess = createAction(\n  \"contacts/deleteContactsSuccsess\"\n);\nexport const deleteContactsError = createAction(\"contacts/deleteContactsError\");\n\nexport const fetchContactsRequest = createAction(\n  \"contacts/fetchContactsRequest\"\n);\nexport const fetchContactsSuccsess = createAction(\n  \"contacts/fetchContactsSuccsess\"\n);\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n\n// const addContact = createAction(\"contact/add\", (name, number) => ({\n//   payload: {\n//     id: uuidv4(),\n//     name,\n//     number,\n//   },\n// }));\n\n// const deleteContact = createAction(\"contacts/delete\");\n\n// export default { addContact, deleteContact, changeFilter };\n\n// Без toolkit\n// import { v4 as uuidv4 } from \"uuid\";\n// import types from \"./types\";\n\n// const addContact = (name, number) => ({\n//   type: types.ADD,\n//   payload: {\n//     id: uuidv4(),\n//     name,\n//     number,\n//   },\n// });\n\n// const deleteContact = (conactId) => ({\n//   type: types.DELETE,\n//   payload: conactId,\n// });\n\n// const changeFilter = (value) => ({\n//   type: types.CHANGE_FILTER,\n//   payload: value,\n// });\n\n// export default { addContact, deleteContact, changeFilter };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__38Ijn\",\"activeLink\":\"Navigation_activeLink__1EqSR\",\"nav\":\"Navigation_nav__2zavO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__26gTA\",\"activeLink\":\"AuthNav_activeLink__3313X\",\"nav\":\"AuthNav_nav__2Tz18\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"UserMemu_user__1eQkx\",\"email\":\"UserMemu_email__2e-pL\",\"button\":\"UserMemu_button__1ehV6\"};","const input = {\r\n  margin: \"30px 0\",\r\n  display: \"block\",\r\n};\r\n\r\nconst buttonStyles = {\r\n  margin: \"30px 0\",\r\n  display: \"block\",\r\n  bgcolor: \"#009688\",\r\n  \":hover\": {\r\n    bgcolor: \"#036b69\",\r\n  },\r\n  \":focus\": {\r\n    bgcolor: \"#036b69\",\r\n  },\r\n};\r\n\r\nconst buttonLogOut = {\r\n  height: \"25px\",\r\n  fontSize: 11,\r\n  margin: \"0 20px\",\r\n  bgcolor: \"#009688\",\r\n  \":hover\": {\r\n    bgcolor: \"#036b69\",\r\n  },\r\n  \":focus\": {\r\n    bgcolor: \"#036b69\",\r\n  },\r\n};\r\n\r\nconst buttonDelete = {\r\n  bgcolor: \"#009688\",\r\n  \":hover\": {\r\n    bgcolor: \"#036b69\",\r\n  },\r\n  \":focus\": {\r\n    bgcolor: \"#036b69\",\r\n  },\r\n};\r\n\r\nconst styles = {\r\n  input,\r\n  buttonStyles,\r\n  buttonLogOut,\r\n  buttonDelete,\r\n};\r\n\r\nexport default styles;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__LH2Hy\"};","export default __webpack_public_path__ + \"static/media/home-img-1.27aad067.jpg\";"],"sourceRoot":""}